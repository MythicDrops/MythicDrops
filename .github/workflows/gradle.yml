#
# CI build that assembles artifacts and runs tests.
# If validation is successful this workflow releases from the main dev branch.
#
# - skipping CI: add [skip ci] to the commit message
# - skipping release: add [skip release] to the commit message
#
name: CI

on:
  push:
    branches: ['main']
    tags-ignore: [v*] # release tags are autogenerated after a successful CI, no need to run CI against them
  pull_request:
    branches: ['**']

jobs:
  gradle_wrapper_validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4   # docs: https://github.com/actions/checkout
        with:
          fetch-depth: '0'  # https://github.com/shipkit/shipkit-auto-version#fetch-depth-on-ci
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1.0.4
  build:
    runs-on: ubuntu-latest
    needs: [ gradle_wrapper_validation ]
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    steps:
      - name: 1. Check out code
        uses: actions/checkout@v2 # https://github.com/actions/checkout
        with:
          fetch-depth: '0' # https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci

      - name: 2. Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 16

      - name: 3. Perform build
        run: chmod +x ./gradlew && ./gradlew build publishToMavenLocal --scan

      - name: 4. Perform release
        # Release job, only for pushes to the main development branch
        if: github.event_name == 'push'
          && github.ref == 'refs/heads/main'
          && github.repository == 'MythicDrops/MythicDrops'
          && !contains(toJSON(github.event.commits.*.message), '[skip release]')

        run: ./gradlew githubRelease publishToSonatype closeAndReleaseStagingRepository --scan
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONATYPE_USER: ${{secrets.OSSRH_USERNAME}}
          SONATYPE_PWD: ${{secrets.OSSRH_TOKEN}}
          PGP_KEY: ${{secrets.GPG_PRIVATE_KEY}}
          PGP_PWD: ${{secrets.GPG_PASSWORD}}
