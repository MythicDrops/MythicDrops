#
# CI build that assembles artifacts and runs tests.
# If validation is successful this workflow releases from the main dev branch.
#
# - skipping CI: add [skip ci] to the commit message
# - skipping release: add [skip release] to the commit message
#
name: CI

permissions: read-all

on:
  push:
    branches: ["main"]
    tags-ignore: [v*] # release tags are autogenerated after a successful CI, no need to run CI against them
    paths-ignore:
      - "docs/**"
  pull_request:
    branches: ["**"]

jobs:
  gradle_wrapper_validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4 # docs: https://github.com/actions/checkout
        with:
          fetch-depth: "0" # https://github.com/shipkit/shipkit-auto-version#fetch-depth-on-ci
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@216d1ad2b3710bf005dc39237337b9673fd8fcd5 # v3
  build:
    runs-on: ubuntu-latest
    needs: [gradle_wrapper_validation]
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4 # https://github.com/actions/checkout
        with:
          fetch-depth: "0" # https://github.com/shipkit/shipkit-changelog#fetch-depth-on-ci

      - name: Setup Java
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          distribution: adopt
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@db19848a5fa7950289d3668fb053140cf3028d43 # v3

      - name: Perform Build via Gradle
        run: ./gradlew build publishToMavenLocal

      - name: Upload Distribution to GitHub Actions
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        # Development job, only for PRs or pushes not to the main development branch
        if: github.event_name == 'pull_request'
          && github.repository == 'MythicDrops/MythicDrops'
        with:
          path: build/distributions/*.zip

      - name: Upload CodeCov Report
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4
        with:
          files: "**/build/reports/jacoco/**/*.xml"
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish to Maven Central via Gradle
        # Release job, only for pushes to the main development branch
        if: github.event_name == 'push'
          && github.ref == 'refs/heads/main'
          && github.repository == 'MythicDrops/MythicDrops'
          && !contains(toJSON(github.event.commits.*.message), '[skip release]')
        run: ./gradlew githubRelease publishToSonatype closeAndReleaseStagingRepositories
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONATYPE_USER: ${{secrets.OSSRH_USERNAME}}
          SONATYPE_PWD: ${{secrets.OSSRH_TOKEN}}
          PGP_KEY: ${{secrets.GPG_PRIVATE_KEY}}
          PGP_PWD: ${{secrets.GPG_PASSWORD}}
